// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Enable uuid extension for Postgres (for Supabase, this is usually enabled by default)
generator supabase {
  provider = "prisma-client-js"
}

// User model
model User {
  id           String       @id @default(uuid()) @db.Uuid
  email        String       @unique
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  fullName     String?
  customerId   String?      @unique
  priceId      String?
  status       String       @default("inactive")
  pdfSummaries PdfSummary[]
  payments     Payment[]
}

// PDF Summary model
model PdfSummary {
  id              String   @id @default(uuid()) @db.Uuid
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @db.Uuid
  originalFileUrl String
  summaryText     String
  status          String   @default("completed")
  title           String?
  fileName        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Payment model
model Payment {
  id              String   @id @default(uuid()) @db.Uuid
  amount          Int
  status          String
  stripePaymentId String   @unique
  priceId         String
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
